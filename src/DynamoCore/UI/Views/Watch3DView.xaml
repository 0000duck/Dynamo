<UserControl x:Class="Dynamo.Controls.Watch3DView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Dynamo.Controls"
             xmlns:sdx="clr-namespace:SharpDX;assembly=SharpDX" 
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
             xmlns:ui="clr-namespace:Dynamo.UI"
             Name="topControl" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoConvertersDictionaryUri}"/>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.MenuStyleDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <controls:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Color x:Key="pointColor" R="0" B="255" G="0" A="255"></Color>
            <Color x:Key="lineColor" R="0" B="255" G="0" A="255"></Color>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Name="inputGrid"
            x:FieldModifier="public"
            MinHeight="100" MinWidth="100">

        <Grid.ContextMenu>
            <ContextMenu Name="MainContextMenu"
                         x:FieldModifier="public">

                <MenuItem Header="Switch to Node _View">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.ToggleCanNavigateBackgroundCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="_Rotate">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.ToggleOrbitCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.IsChecked>
                        <Binding Path="PlacementTarget.DataContext.IsOrbiting"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.IsChecked>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="_Pan">
                    <MenuItem.Command>
                        <Binding Path="PlacementTarget.DataContext.TogglePanCommand"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.Command>
                    <MenuItem.IsChecked>
                        <Binding Path="PlacementTarget.DataContext.IsPanning"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}" />
                    </MenuItem.IsChecked>
                    <MenuItem.Visibility>
                        <Binding Path="PlacementTarget.DataContext.IsBackgroundPreview"
                                 Mode="OneWay"
                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}"
                                 Converter="{StaticResource BoolToVisibilityConverter}"
                                 ConverterParameter="Collapse" />
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem Header="_Zoom to Fit"
                          Click="OnZoomToFitClicked" />
            </ContextMenu>
        </Grid.ContextMenu>

        <hx:Viewport3DX 
            Name="watch_view"
            ShowViewCube="false" 
            UseDefaultGestures="True"  
            ShowCoordinateSystem="{Binding ElementName=topControl, Path=DataContext.CanNavigateBackground}"
            RenderTechnique="{Binding RenderTechnique}"
            Camera="{Binding Camera}" 
            IsHitTestVisible="True"
            IsShadowMappingEnabled="{Binding ShowShadows}">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Key="B" Command="hx:ViewportCommands.BackView"/>
                <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView"/>
                <KeyBinding Key="U" Command="hx:ViewportCommands.TopView"/>
                <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView"/>
                <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView"/>
                <KeyBinding Key="R" Command="hx:ViewportCommands.RightView"/>
                <KeyBinding Gesture="Control+E" Command="hx:ViewportCommands.ZoomExtents"/>
                <MouseBinding Gesture="LeftClick" Command="hx:ViewportCommands.Rotate"/>
                <MouseBinding Gesture="WheelClick" Command="hx:ViewportCommands.Zoom"/>
                <MouseBinding Gesture="MiddleClick" Command="hx:ViewportCommands.Pan"/>
            </hx:Viewport3DX.InputBindings>
            <hx:ShadowMap3D x:Name="shadowMap" Resolution="{Binding ShadowMapResolution}" />
            <hx:AmbientLight3D Color="{Binding AmbientLightColor}"/>
            <hx:DirectionalLight3D Name="key" Color="{Binding DirectionalLightColor}" Direction = "{Binding DirectionalLightDirection}"/>
            <hx:DirectionalLight3D Name="fill" Color="{Binding FillLightColor}" Direction = "{Binding FillLightDirection}"/>
            <hx:MeshGeometryModel3D x:Name="mesh" Geometry="{Binding Mesh}" Transform = "{Binding Model1Transform}" Material="{Binding WhiteMaterial}" IsHitTestVisible="False" />
            <hx:LineGeometryModel3D x:Name="lines"  Geometry="{Binding Lines}" Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="0.5" IsHitTestVisible="False" />
            <hx:LineGeometryModel3D x:Name="grid" Geometry="{Binding Grid}"  Transform = "{Binding Model1Transform}" Color="{x:Static sdx:Color.White}" Thickness="0.3" IsHitTestVisible="False"/>
            <hx:PointGeometryModel3D x:Name="points" Geometry="{Binding Points}" Transform="{Binding Model1Transform}" Color="{x:Static sdx:Color.White}"/>
            <hx:BillboardTextModel3D x:Name="text" Geometry="{Binding Text}" Transform="{Binding Model1Transform}"/>
        </hx:Viewport3DX>

        <Thumb Name ="resizeThumb" Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5"
               DragDelta="ResizeThumb_OnDragDelta" DragStarted="ResizeThumb_OnDragStarted" DragCompleted="ResizeThumb_OnDragCompleted"
               Visibility="{Binding WatchIsResizable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
