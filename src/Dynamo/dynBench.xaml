<Window x:Class="Dynamo.Controls.dynBench"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dragCanvas="clr-namespace:Dynamo.Controls;assembly=DragCanvas"
        xmlns:dynamo="clr-namespace:Dynamo"
        xmlns:controls="clr-namespace:Dynamo.Controls"
        xmlns:commands="clr-namespace:Dynamo.Commands"
        x:Name="_this"
        Height="768" Width="1024"
        MouseMove="OnMouseMove" 
        MouseLeftButtonDown="OnMouseLeftButtonDown"
        MouseWheel="OnMouseWheel"
        MouseDown="OnMouseDown"
        MouseUp="OnMouseUp"
        KeyUp="OnKeyUp"
        PreviewKeyUp="OnPreviewKeyUp"
        PreviewKeyDown="OnPreviewKeyDown"
        Closed="WindowClosed" 
        MinHeight="600" 
        MinWidth="800" 
        Title="Dynamo"
        AllowsTransparency="False"
        FocusManager.FocusedElement="{Binding ElementName=searchBox}">
    <Window.InputBindings>
        <KeyBinding Key="Tab"
                    Command="{Binding Source={x:Static commands:DynamoCommands.SelectNeighborsCmd}}"/>
        <KeyBinding Key="Delete"
                    Modifiers="Control"
                    Command="{Binding Source={x:Static commands:DynamoCommands.DeleteCmd}}"/>
        <KeyBinding Key="Back"
                    Modifiers="Control"
                    Command="{Binding Source={x:Static commands:DynamoCommands.DeleteCmd}}"/>
        <KeyBinding Key="C"
                    Modifiers="Control"
                    Command="{Binding Source={x:Static commands:DynamoCommands.CopyCmd}}"/>
        <KeyBinding Key="V"
                    Modifiers="Control"
                    Command="{Binding Source={x:Static commands:DynamoCommands.PasteCmd}}"/>
    </Window.InputBindings>
   <Grid Focusable="True" Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MaxWidth="300"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu IsMainMenu="True" Margin="0,0,0,0" HorizontalAlignment="Stretch" 
              VerticalAlignment="Center" Height="22" Name="menu1" FontFamily="Arial" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"  Padding="3">
             <MenuItem Header="_File" Name="fileMenu">
            <MenuItem Header="_Clear" Click="Clear_Click" Name="clearButton">
               <MenuItem.Icon>
                  <Image Source="/DynamoElements;component/Images/DocumentHS.png" Width="16" Height="16" />
               </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="_Open..." Click="Open_Click" Name="openButton">
               <MenuItem.Icon>
                  <Image Source="/DynamoElements;component/Images/openHS.png" Width="16" Height="16" />
               </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Samples" Name="SamplesMenu">
               <MenuItem.Icon>
                  <Image Source="/DynamoElements;component/Images/OpenSelectedItemHS.png" Width="16" Height="16" />
               </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="_Save" Click="saveButton_Click" Name="saveThisButton">
                <MenuItem.Icon>
                        <Image Source="/DynamoElements;component/Images/saveHS.png" Width="16" Height="16" />
                    </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_Save As..." Click="SaveAs_Click" Name="saveButton">
               <MenuItem.Icon>
                  <Image Source="/DynamoElements;component/Images/saveHS.png" Width="16" Height="16" />
               </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_Save Image..." Click="saveImage_Click" Name="saveImage"/>
            <MenuItem Header="_Layout All" Click="layoutAll_Click"  Name="layoutAll"/>
            <Separator />
             </MenuItem>
             <MenuItem Header="_View" Name="viewMenu">
                <MenuItem Header="_Home" Click="Home_Click" Name="homeButton" IsEnabled="False">
                   <MenuItem.Icon>
                      <Image Source="/DynamoElements;component/Images/HomeHS.png" Width="16" Height="16" />
                   </MenuItem.Icon>
                </MenuItem>
                <Separator />
             </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Header="_Connector Type" IsEnabled="True">
                    <MenuItem Name="settings_curves" IsCheckable="True" IsChecked="True" Checked="settings_curves_Checked" Header="Curves"/>
                    <MenuItem Name="settings_plines" IsCheckable="True" IsChecked="False" Checked="settings_plines_Checked" Header="Polylines"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Border Margin="0" BorderBrush="Black" BorderThickness="0" Name="border" 
                Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="1" Grid.RowSpan="3">
            <!--outer canvas clips the inner canvas-->
            <Canvas Name="outerCanvas" 
                 Margin="0,0,0,0" 
                 ClipToBounds="True" 
                 Grid.Row="0"
                 Grid.Column="2">
                <dragCanvas:DragCanvas x:Name="WorkBench"
                                x:FieldModifier="public"
                                Width="100000" 
                                Height="100000" 
                                Visibility="Hidden" 
                                ContextMenuOpening="WorkBench_ContextMenuOpening">
                <Canvas.RenderTransform>
                  <TransformGroup>
                     <ScaleTransform CenterX="-10"
                                     CenterY="-55"
                                     ScaleX="{Binding ElementName=_this,Path=Zoom}" 
                                     ScaleY="{Binding ElementName=_this,Path=Zoom}" />
                     <TranslateTransform X="{Binding ElementName=_this, Path=CurrentX}" 
                                         Y="{Binding ElementName=_this, Path=CurrentY}" />
                  </TransformGroup>
               </Canvas.RenderTransform>
                <Rectangle
                    x:Name="selectionBox"
                    Visibility="Collapsed"
                    Stroke="Black"
                    StrokeThickness="1"
                />
                <Canvas.Background>
                    <SolidColorBrush Color="Transparent"/>
                </Canvas.Background>
                </dragCanvas:DragCanvas>
                <Label Canvas.Right="30" Canvas.Top="5" Content="Home" Height="45" Name="workspaceLabel" 
                       HorizontalContentAlignment="Right" FontSize="24" 
                       FontFamily="Trebuchet MS" Opacity=".6" IsHitTestVisible="False" />
                <Image Canvas.Right="0" Canvas.Top="5" Height="35" Name="editNameButton" Stretch="Fill" Width="33" Source="/DynamoElements;component/Images/Anonymous_Pencil_icon.png" 
                       MouseEnter="image1_MouseEnter" MouseLeave="image1_MouseLeave" MouseLeftButtonUp="image1_MouseLeftButtonUp" 
                       MouseLeftButtonDown="image1_MouseLeftButtonDown" Visibility="Collapsed" IsHitTestVisible="False" />
                <TextBox Canvas.Right="30" Canvas.Top="13" Height="23" Name="editNameBox" Width="263" 
                         Focusable="False" IsHitTestVisible="False" Visibility="Collapsed" 
                         IsEnabled="False" MouseEnter="editNameBox_MouseEnter" MouseLeave="editNameBox_MouseLeave" />
                <Canvas.Background>
                    <SolidColorBrush Color="#FF505050" />
                    <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF4B4B4B" Offset="1" />
                        <GradientStop Color="#FF7A7A7A" Offset="0" />
                    </LinearGradientBrush>-->
                </Canvas.Background>
                <Canvas.ContextMenu>
                    <ContextMenu>
                       <MenuItem 
                            Header="_New Node From Selection" 
                            Name="NodeFromSelection"
                            Command="{Binding Source={x:Static commands:DynamoCommands.NodeFromSelectionCmd}}"/>
                    </ContextMenu>
                </Canvas.ContextMenu>
            </Canvas>
        </Border>
        <ScrollViewer Name="LogScroller" 
                    VerticalAlignment="Stretch"
                    VerticalScrollBarVisibility="Auto" 
                    HorizontalAlignment="Stretch"
                    HorizontalScrollBarVisibility="Auto"
                    Background="DarkGray" 
                    Opacity=".5" 
                    Visibility="Visible"
                    Grid.Row="3"
                    Grid.Column="2" 
                    Grid.ColumnSpan="1">
            <ScrollViewer.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Click="ClearLog_Click" />
                </ContextMenu>
            </ScrollViewer.ContextMenu>
            <TextBox Text="{Binding ElementName=_this, Path=LogText}" 
                    Background="#00000000" BorderThickness="0" BorderBrush="#00000000" 
                    Margin="5" Foreground="White" TextWrapping="Wrap" Focusable="True"
                    IsReadOnly="True" IsReadOnlyCaretVisible="True" IsUndoEnabled="False" 
                    IsTabStop="False" />
        </ScrollViewer>
        <Grid Height="Auto" Width="300" HorizontalAlignment="Stretch" Name="sidebarGrid" VerticalAlignment="Stretch" Visibility="Visible" 
              Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Background="#FF505050">
            <ScrollViewer HorizontalAlignment="Stretch" Margin="10,50,10,10" Name="scrollViewer1" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto">
                <StackPanel Name="SideStackPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                </StackPanel>
            </ScrollViewer>
            <!--<Label Content="Search:" Margin="0,5,5,0" Height="23" VerticalAlignment="Top" Width="Auto" HorizontalAlignment="Left" FontFamily="Arial" Foreground="#FFC8C8C8"/>-->
            <TextBox Name="SearchBox" Margin="10,10,74,0" Height="25"
                        Text="" Padding="3" IsEnabled="True" VerticalAlignment="top" TextChanged="SearchBox_OnTextChanged" 
                        LostFocus="searchBox_LostFocus" FontFamily="Arial">
                <!--<TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <VisualBrush Stretch="None">
                                            <VisualBrush.Visual>
                                                <Grid>
                                                    <TextBlock Text="Search..."  HorizontalAlignment="Left" Foreground="Gray"/>
                                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Rectangle Fill="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                    </Canvas>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="{x:Null}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <VisualBrush Stretch="None">
                                            <VisualBrush.Visual>
                                                <Border>
                                                    <TextBlock Text="Search..."  HorizontalAlignment="Left" Foreground="Gray"/>
                                                </Border>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <VisualBrush Stretch="None">
                                        </VisualBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>-->
            </TextBox>
            <Button Margin="0,10,10,0" Height="25" Width="50" HorizontalAlignment="Right" Content="New" 
                    VerticalAlignment="Top" Click="NewFunction_Click" FontFamily="Arial"/>
        </Grid>
        <Button Margin="10,55" Height="25" Width="100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Content="Run" 
                    Click="Run_Click" Name="RunButton" FontFamily="Arial" Grid.Row="1" Grid.Column="2" />
        <Button Margin="120,55" Height="25" Width="100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Content="Cancel" 
                    Click="Cancel_Click" Name="cancelButton" FontFamily="Arial" Grid.Row="1" Grid.Column="2" />
        <CheckBox Margin="10,35" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                  Name="dynamicCheckBox" x:FieldModifier="public" FontFamily="Arial" Grid.Row="1" Grid.Column="2"/>
        <Label Margin="25,30" Content="Run Automatically" HorizontalAlignment="Left" 
                   VerticalAlignment="Bottom" FontFamily="Arial" Foreground="#FFC8C8C8" Grid.Row="1" Grid.Column="2"/>
        <CheckBox Margin="10,13" HorizontalAlignment="Left" VerticalAlignment="Bottom" x:FieldModifier="public" Name="debugCheckBox" 
                      Checked="debugCheckBox_Checked" Unchecked="debugCheckBox_Unchecked" FontFamily="Arial" Grid.Row="1" Grid.Column="2"/>
        <Label Margin="25,7" Content="Debug" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
               FontFamily="Arial" Foreground="#FFC8C8C8" Grid.Row="1" Grid.Column="2"/>
        <Canvas HorizontalAlignment="Stretch"
              Margin="0,20,0,0"
              Grid.Row="1"
              Grid.Column="0"
              Grid.RowSpan="3"
              Grid.ColumnSpan="3"
              Name="overlayCanvas" 
              VerticalAlignment="Stretch" 
              Width="Auto" 
              IsHitTestVisible="False" 
              MouseUp="OverlayCanvas_OnMouseUp" 
              PreviewMouseMove="OverlayCanvas_OnMouseMove"
              Visibility="Visible">
         <Canvas.Background>
            <SolidColorBrush />
         </Canvas.Background>
      </Canvas>
        <GridSplitter ResizeDirection="Rows" 
                        Grid.Column="2" 
                        Grid.ColumnSpan="1"
                        Grid.Row="2" 
                        Grid.RowSpan="1"
                        Width="Auto" 
                        Height="2" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" 
                        Margin="0" Background="#FF646464"/>
        <GridSplitter ResizeDirection="Auto" 
                          Grid.Column="1" 
                          Grid.Row="1" 
                          Grid.RowSpan="3"
                          Height="Auto"
                          Width="2"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          Margin="0" Background="#FF646464"/>
   </Grid>
</Window>
