<Window x:Class="Dynamo.PackageManager.PackageManagerPublishView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="480" Width="350" Name="PublishInfoControl" Visibility="{Binding Path=Visible}">
  
  <Grid Background="Black">

    <StackPanel Name="BrowserContainer" Orientation="Vertical">

            <StackPanel.Background>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#444" Offset="0.0" />
                    <GradientStop Color="#222" Offset="1.0" />
                </LinearGradientBrush>
            </StackPanel.Background>

       <TextBlock Name ="Indicator" Foreground="WhiteSmoke" Padding="10,15,10,10" Width ="350" FontSize="10" Text="PUBLISH A CUSTOM NODE"/>

    <Label Content="Title" Foreground="DarkGray" Height="28" Margin="0,10,0,0"  HorizontalAlignment="Left" Name="TitleLabel" VerticalAlignment="Top" />
    <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}" Name="TitleInput" Margin="10" Padding="5" Text="{Binding Path=Title, Mode=TwoWay}" />

      <Label Content="Description" Foreground="DarkGray" Height="28" Margin="0,10,0,0"  HorizontalAlignment="Left" Name="DescriptionLabel" VerticalAlignment="Top" />   
      <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}"  Name="DescriptionInput" Margin="10" Padding="5" Height="50" MaxWidth="340" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding Path=Description, Mode=TwoWay}" />

      <Label Content="Keywords (separated by spaces)" Height="28" Margin="0,10,0,0" Foreground="DarkGray" HorizontalAlignment="Left"  VerticalAlignment="Top" />
            <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}" Name="KeywordsInput" Margin="10" Padding="5" Text="{Binding Path=Keywords, Mode=TwoWay}" />

      <Label Content="Version (major minor build)" Height="28" Margin="0,10,0,0" Foreground="DarkGray" HorizontalAlignment="Left"  VerticalAlignment="Top" />
      <StackPanel Orientation="Horizontal">
            <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}" Name="VersionMajor" Width ="30" Margin="5" Padding="5" HorizontalAlignment="Left" Text="{Binding Path=MajorVersion, Mode=TwoWay}"/>
            <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}" Name="VersionMinor" Width ="30" Margin="5" Padding="5" HorizontalAlignment="Left" Text="{Binding Path=MinorVersion, Mode=TwoWay}"/>
            <TextBox Style="{DynamicResource ResourceKey=SDarkTextBox}" Name="VersionBuild" Width ="30" Margin="5" Padding="5" HorizontalAlignment="Left" Text="{Binding Path=BuildVersion, Mode=TwoWay}"/>
      </StackPanel>

    <Label Content="Dependencies" Height="28" Margin="0,10,0,0" Foreground="DarkGray" HorizontalAlignment="Left"  VerticalAlignment="Top" />
    <TreeView ItemsSource="{Binding Path=Dependencies}">
          
      </TreeView>

        <ScrollViewer>

            <ScrollViewer.Resources>

                    <Style x:Key="SearchTreeView" TargetType="{x:Type TreeView}">
                        <Setter Property="Focusable" Value="False"></Setter>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeView}">
                                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer Focusable="false" Background="Transparent" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="32"/>
                        <Setter Property="Foreground" Value="#888"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">

                                    <Border Width="32" Background="Transparent">
                                        <Border SnapsToDevicePixels="true" Width="24" Height="10" Background="{TemplateBinding Background}" x:Name="border">
                                            <Path HorizontalAlignment="Center" 
                                              Margin="1,1,1,1" x:Name="ExpandPath" Fill="{TemplateBinding Foreground}" 
                                              Data="M 0 10 L 5 5 L 0 0 Z"/>
                                        </Border>
                                    </Border>

                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 0 L 5 5 L 10 0 Z"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Focusable" Value="False"></Setter>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"></Setter>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                        <Setter Property="Visibility" Value="{Binding Visibility}"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">

                                    <Button Command="{Binding ToggleIsExpanded}">
                                        <Button.Focusable>False</Button.Focusable>

                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Button.Template>

                                        <Border Name="ContainerLight" BorderThickness="3,0,0,0" BorderBrush="#222">
                                            <Border Name="Bd" BorderThickness="0,1,0,0" BorderBrush="#222" >
                                                <Grid MinHeight="{Binding Height}">

                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="{Binding Height}"/>
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>

                                                    <ToggleButton VerticalAlignment="Center" x:Name="Expander" Background="Transparent" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded}"/>

                                                    <Rectangle Width="7" Height="7" x:Name="whiteRect" Margin="3,0" VerticalAlignment="Center" Fill="#FFFFFF" HorizontalAlignment="Center" Visibility="Collapsed" />

                                                    <Border Name="C" VerticalAlignment="Center" SnapsToDevicePixels="true" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header"/>
                                                    </Border>

                                                    <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"  x:Name="ItemsHost" />

                                                </Grid>

                                            </Border>

                                        </Border>
                                    </Button>

                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>

                                        <Trigger Property="IsExpanded" Value="true">

                                            <Setter Property="BorderBrush" TargetName="ContainerLight" Value="White"/>
                                        </Trigger>

                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            <Setter Property="Visibility" TargetName="whiteRect" Value="Visible"/>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="#555"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                                <Condition Property="IsExpanded" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="#333"/>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                                <Condition Property="HasItems" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="#444"/>
                                        </MultiTrigger>

                                        <!--<MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>-->

                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ScrollViewer.Resources>

            <TreeView ItemsSource="{Binding Path=BrowserRootCategories}" BorderThickness="0">

                <TreeView.Resources>

                    <HierarchicalDataTemplate DataType = "{x:Type packagemanager:PackageDependencyRoot}" ItemsSource="{Binding Path=Items}" >

                        <TextBlock Foreground="WhiteSmoke" FontSize="14" Text="{Binding Path=Name}"/>

                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType = "{x:Type packagemanager:PackageDependencyElement}" ItemsSource="{Binding Path=Items}">

                        <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}"/>

                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type packagemanager:PackageDependencyLeaf}">

                        <TextBlock Foreground="WhiteSmoke" Text="{Binding Path=Name}" />

                    </HierarchicalDataTemplate>

                </TreeView.Resources>

            </TreeView>
            
        </ScrollViewer>
        
        
        

      <Label Foreground="DarkGray" Height="28" Margin="0,10,0,0"  HorizontalAlignment="Left" Name="LicenseLabel" VerticalAlignment="Top">
        The default is the MIT license.
      </Label>

      <Button Style="{DynamicResource ResourceKey=STextButton}" Width="70" Margin="10" HorizontalAlignment="Right" Command="{Binding Path=SubmitCommand}" >Submit</Button>
      
    </StackPanel>
    
  </Grid>

  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DynamoElements;component/Themes/DynamoModern.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>
    
</Window>
