class CoordinateSystem{}class Vector{    public GlobalCoordinates : var;    public X : var;    public Y : var;    public Z : var;    public Length : var;    public Normalized : var;    public ParentCoordinateSystem : var;    public XLocal : var;    public YLocal : var;    public ZLocal : var;    public constructor ByCoordinates(x : double, y : double, z : double)    {        X = x;        Y = y;        Z = z;    }        public constructor ByCoordinates(cs: CoordinateSystem, xLocal : double, yLocal : double, zLocal : double )    {        ParentCoordinateSystem = cs;        XLocal = xLocal;        YLocal = yLocal;        ZLocal = zLocal;    }    public constructor ByCoordinateArray(coordinates : double[])    {        X = coordinates[0];        Y = coordinates[1];        Z = coordinates[2];        }    public def Cross : Vector (otherVector : Vector)    {        return = Vector.ByCoordinates(            Y*otherVector.Z - Z*otherVector.Y,            Z*otherVector.X - X*otherVector.Z,            X*otherVector.Y - Y*otherVector.X);    }}
